plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.springframework.experimental.aot' version '0.12.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://repo.spring.io/release' }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'   // 직접 관련이 있는 모듈들만 컴파일 함
    compileOnly 'org.projectlombok:lombok'  // 해당 라이브러리가 컴파일 단계에서만 필요할 때
    annotationProcessor 'org.projectlombok:lombok'  // 컴파일 단계에서 어노테이션을 분석하고 처리할 때
    developmentOnly 'org.springframework.boot:spring-boot-devtools' // 클래스 변경 시, 서버를 자동으로 재 기동함.
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.h2database:h2:'    // 해당 라이브러리가 런타임 단계에서만 필요할 때
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.6'  // jpa사용을 위한 implementation
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder:tiny'
    environment = ['BP_NATIVE_IMAGE': 'true']
}
